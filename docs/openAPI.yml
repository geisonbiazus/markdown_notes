openapi: '3.0.3'
info:
  version: '1.0.0'
  title: 'MarkdownNotes API'
  contact:
    name: 'Geison Biazus'
    email: 'geisonbiazus@gmail.com'

servers:
  - url: http://localhost:4000
    description: Local server
  - url: https://api.notes.geisonbiazus.com
    description: Production server

components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        body:
          type: string

    Error:
      properties:
        type:
          type: string

  examples:
    NotFoundError:
      value: { 'type': 'not_found' }

  securitySchemes:
    bearerAuth:
      type: 'http'
      scheme: 'bearer'
      bearerFormat: 'JWT'

paths:
  '/sign_in':
    post:
      tags:
        - Authentication
      description: 'Authenticates an user in order to use the application.'
      requestBody:
        content:
          'application/json':
            schema:
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
            example: { 'email': 'user@example.com', 'password': 'password123' }

      responses:
        200:
          description: 'Authentication successful.'
          content:
            'application/json':
              schema:
                properties:
                  token:
                    type: string
                    description: 'Token to be used in subsequent requests'
        404:
          description: 'User not found'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                not_found:
                  $ref: '#/components/examples/NotFoundError'

  '/notes':
    get:
      tags:
        - Notes
      description: 'Returns all notes from the authenticated user'
      security:
        - bearerAuth: []
      responses:
        200:
          description: 'A list of notes.'
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
  '/notes/{id}':
    put:
      tags:
        - Notes
      description: 'Create or update a note based on the given ID'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      security:
        - bearerAuth: []
      responses:
        200:
          description: 'The created or updated note.'
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Note'
